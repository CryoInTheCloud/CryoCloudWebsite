# Edit this file to add dependencies to environment,
# Then run `./lock-environment.sh` to generate reproducible lock files

# !!! If you are developing the website locally use the existing lock files
# for your platform (`conda create --name cryocloud --file conda-linux-64.lock`)

name: cryocloud

channels:
  - conda-forge

dependencies:
  - python==3.10.8
  # Required until https://github.com/jupyterhub/repo2docker/pull/1196 is merged
  - jupyterhub-singleuser>=3.0,<4.0
  # nbgitpuller is very helpful when distributing user content
  - nbgitpuller==1.1.1
  # Specify major version of jupyterlab to use. Manually bump it when you want to upgrade
  # jupyterlab version
  - jupyterlab>=3.0,<4.0
  # This provides memory usage stats on JupyterLab and classic notebook
  - jupyter-resource-usage==0.6.4
  # https://syncthing.net/ provides a dropbox-like interface for syncing directories across users,
  # hubs and machines. Used along with `jupyter-syncthing-proxy` from pip.
  - syncthing==1.22.1
  # gh-scoped-creds allows users to securely push to GitHub from their repo.
  # https://blog.jupyter.org/securely-pushing-to-github-from-a-jupyterhub-3ee42dfdc54f has
  # some more information
  - gh-scoped-creds==4.1
  # needed for Linux desktop to work
  - websockify>=0.10
  # Cloud access tools and libraries
  # Access S3 easily from python
  - s3fs==2022.11.0
  # handle login and similar details for accessing earthdata protected data
  # https://github.com/nsidc/earthaccess
  - earthdata==0.4.1
  # Access datasets exposed via STAC
  - pystac-client==0.5.1
  # Access datasets exposed via intake catalogs
  - intake==0.6.6
  - intake-esm==2022.9.18
  - intake-xarray==0.6.1

  # Core scientific python stack
  - numpy==1.23.5
  - scipy==1.9.3
  - matplotlib==3.6.2
  - pandas==1.5.2
  - networkx==2.8.8
  - scikit-image==0.19.3
  - scikit-learn==1.1.3
  - sympy==1.11.1
  - statsmodels==0.13.5
  - xarray==2022.11.0
  - hypothesis==6.58.0 # needed by numpy testing tools
  - cython==0.29.32 # optimization, C API access
  - numba==0.56.4 # high-performance numerics

  # Jupyter tools
  - ipython==8.6.0
  - ipywidgets==7.7.2
  - jupyterlab-favorites==3.1.0
  - jupyterlab-geojson==3.3.1
  - jupyterlab-git==0.39.3
  - jupyter-book==0.13.1
  - nbconvert==6.5.3
  - nbdime==3.1.1

  # Visualization packages
  - cartopy==0.20.2 # geospatial plotting with matplotlib
  - seaborn==0.12.1 # statistical plotting with matplotlib
  - ipympl==0.9.2 # This enables matplotlib interaction with jupyter widgets
  - ipyleaflet==0.17.2
  - bokeh==3.0.2
  - plotly==5.11.0

  # Geospatial data packages
  - geopandas==0.12.1
  - rasterio==1.2.10
  - rioxarray==0.13.1
  - xarray-datatree==0.0.9

  # File formats and file management, download, dataset caching
  - h5py==3.7.0
  - hdf5==1.12.1
  - h5netcdf==1.1.0
  - pooch==1.6.0

  # Distributed computing
  - dask==2022.11.0
  - dask-labextension==6.0.0

  # Other useful generic python packages
  - pillow==9.2.0 # Python imaging library, useful for many image-related tasks
  - tqdm==4.64.1 # progress bars, with notebook support
  - pytest==7.2.0
  - pytest-cov==4.0.0
  - pep8==1.7.1
  - flake8==5.0.4

  # Packages specific to cryo work
  - icepyx==0.6.4

  # Desktop tools whose versions are more recent on conda-forge than ubuntu
  - qgis==3.18.3

  # Not all packages will be available from conda-forge, we install from pip when we need to.
  - pip==22.3.1
  - pip:
    - jupyter-syncthing-proxy

      # Access linux desktop from inside JupyterHub
    - jupyter-desktop-server
